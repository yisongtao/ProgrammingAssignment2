source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
create = h5createFile("example.h5")
create
create = h5createGroup("example.h5","foo")
create = h5createGroup("example.h5","baa")
create = h5createGroup("example.h5","foo/foobaa")
h5ls("example.h5")
A = matrix(1:10, nr=5, nc=2)
h5write(A, "example.h5", "foo/A")
B = array(seq(0.1, 2.0, by=0.1), dim=(5,2,2))
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
attr(B,"scale") <- "liter"
h5write(B,"example.h5","foo/foobaa/B")
h5ls("example.h5")
df = data.frame(1L:5L, seq(0,1,length.out = 5), c("ab","cde","fghi","a","s"), stringsAsFactors = FALSE)
h5write(df, "example.h5","df")
h5ls("example.h5")
readdf = h5read("example.h5","df")
readdf
h5write(c(12,13,15),"example.h5","foo/A", index=list(1:3,2))
h5read("example.h5","foo/A")
q()
install.packages("ggplot2")
install.packages("lattice")
library (nlme)
library (lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library (datasets)
data("airquality")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library (lattice)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot
qplot()
library (ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
install.packages("knitr")
install.packages("markdown")
install.packages("slidify")
install.packages("xtable")
q()
library(datasets)
data(iris)
?iris
str(iris)
mean(iris[iris$Species == "virginica",]$Sepal.Length)
apply(iris[, 1:4], 2, mean)
data(mtcars)
?mtcars
str(mtcars)
sapply(split(mtcars$hp, mtcars$cyl), mean)
209.21429-82.63636
debug(ls)
ls
ls()
q()
install.packages("impute")
source("http://bioconductor.org/biocLite.R")
biocLite("impute")
q()
c=rbind(c(1, -1/4), c(-1/4, 1)
c=rbind(c(1, -1/4), c(-1/4, 1))
c=rbind(c(1, -1/4), c(-1/4, 1))
c
inv(c)
solve(c)
?solve
solve(c) %*% c
setwd("~/Coursera/R_programming/ProgrammingAssignment2")
?inverse
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c)
cacheSolve(c)
cacheSolve()
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c)
cacheSolve(c)
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c)
cacheSolve(c)
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c)
cacheSolve(c)
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(c)
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
cacheSolve(makeCacheMatrix(c))
invC <- cacheSolve(makeCacheMatrix(c))
solve(c)
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
invC=cacheSolve(makeCacheMatrix(c))
invC
source('~/Coursera/R_programming/ProgrammingAssignment2/cachematrix.R')
q()
